({607:function(){var e=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var o=Array(e),s=0;for(t=0;t<r;t++)for(var a=arguments[t],i=0,n=a.length;i<n;i++,s++)o[s]=a[i];return o},t=function(){function t(){}return t.processQueue=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];t.debug("Processing Queue ->",e),"string"==typeof e[0]&&t[e[0]].apply(t,e.slice(1))},t.processOldQueue=function(e){var t=this;e.forEach((function(e){t.processQueue.apply(t,e)}))},t.setCallback=function(e,t){this[e]=t},t.init=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0),this.debug("SDK Initialization");var r=["score","highScore",e,t];if(!this.isLoaded){window.parent.postMessage({controller:"_digitapGame",type:"SDK_SETTINGS",ui:r,ready:!0},"*"),this.listenGameboxEvents();var o=document.getElementsByTagName("canvas"),s=document.getElementsByTagName("html");setTimeout((function(){var e=o[0].getAttribute("style");o[0].setAttribute("style",e+"width: 100%; margin: 0; padding: 0; user-select: none; -webkit-user-select: none; -moz-user-select: none;");var t=s[0].getAttribute("style");s[0].setAttribute("style",(t||"")+"user-select: none; -webkit-user-select: none; -moz-user-select: none;")}),2e3)}this.isLoaded=!0},t.setProgress=function(e,t,r){this.progress={type:"SDK_PLAYER_SCORE_UPDATE",state:e,score:t,level:r,continueScore:t,controller:"_digitapGame"},this.sendData()},t.setLevelUp=function(e){this.progress.level=e,this.progress.type="SDK_PLAYER_LEVEL_UP",this.sendData()},t.setPlayerFailed=function(e){void 0===e&&(e="FAIL"),this.progress.state=e,this.progress.score=0,this.progress.type="SDK_PLAYER_FAILED",this.sendData()},t.sendData=function(){window.parent.postMessage(this.progress,this.origin)},t.listenGameboxEvents=function(){var e=this;window.addEventListener("message",(function(t){if(e.debug("Event Received -> %o -> %o",t.data,t.origin),"object"==typeof t.data&&t.data.controller&&"_digitapApp"==t.data.controller){var r=e.allowedOrigins.indexOf(t.origin);if(-1===r)return void e.debug("Error: Origin not allowed inside game container!");if(e.origin=e.allowedOrigins[r],t.data.type)switch(t.data.type){case"SDK_START_GAME":e.afterStartGame();break;case"SDK_PAUSE_GAME":e.afterPauseGame();break;case"SDK_START_GAME_FROM_ZERO":e.progress.score=0,e.progress.level=0,e.progress.continueScore=0,e.afterStartGameFromZero();break;case"SDK_CONTINUE_WITH_CURRENT_SCORE":e.progress.score=e.progress.continueScore,e.afterContinueWithCurrentScore(e.progress.score);break;default:e.debug('Error: `data.type` = "'+t.data.type+'" not found! Please check `readme.md` of data collector package!')}else e.debug("Error: `event.data.type` should be implemented!")}}),!1)},t.afterStartGameFromZero=function(){},t.afterContinueWithCurrentScore=function(e){},t.afterStartGame=function(){},t.afterPauseGame=function(){},t.debug=function(t){for(var r=[],o=1;o<arguments.length;o++)r[o-1]=arguments[o];var s=window;s.sdkdebug&&console.log.apply(console,e(["DigitapGamePlayerSDK -> "+t],r))},t.gameObject=null,t.isLoaded=!1,t.origin=null,t.isDebugging=!1,t.allowedOrigins=["https://build.digitap.dev","https://wam.app","https://app.wam.app","https://wam.eu","http://localhost:63342","http://localhost:8080","http://localhost:3000"],t.progress={controller:"_digitapGame",type:"SDK_PLAYER_SCORE_UPDATE",score:0,level:0,state:null,continueScore:0},t}();if(void 0!==window.digitapSDK){var r=window.digitapSDK.q;t.processOldQueue(r)}window.digitapSDK=t.processQueue}})[607]();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,